/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package victor_entidades;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import dao.ClienteDAO;
import dao.VendaDAO;
import Entidades.Venda;
import java.text.NumberFormat;
import java.util.Locale;


/**
 *
 * @author Ana Leticia
 */
public class VendasJPanel extends javax.swing.JPanel {

    private VendaDAO daoV = DAOFactory.createVendaDAO();
    private ClienteDAO daoC = DAOFactory.createCliDAO();
    
    /**
     * Creates new form ClienteJPanel
     */
    public VendasJPanel() {
        initComponents();
        atualizaTabela();
    }

    private void atualizaTabela(){
        List<Venda> lista = daoV.listar();
        DefaultTableModel dfm = (DefaultTableModel) jTableVendas.getModel();
        int linhas = jTableVendas.getRowCount();
        for(int i = 0; i < linhas; i++){
            dfm.removeRow(0);   
        }
        
        for (Venda venda : lista){
            Object[] linha = new Object[]{venda.getCpf(), venda.getNome(), venda.getCod_pedido(), venda.isEstacionou(), venda.isReservou(), venda.getGorjeta(), venda.getCouvert(), venda.isStatus(), venda.getPedido()};
            dfm.addRow(linha);
            //JOptionPane.showMessageDialog(jButtonSalvar, linha);
        }
        
        CpfTextField.setText("");
        NomeTextField.setText("");
        CodTextField.setText("");
        jCheckBoxEstaciona.setSelected(false);
        jCheckBoxReserva.setSelected(false);
        jCheckBoxStatus.setSelected(false);
        GorjetaTextField.setText("");
        CouvertTextField.setText("");
        jTextFieldPedido.setText("");
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        NomeLabel = new javax.swing.JLabel();
        CPFLabel = new javax.swing.JLabel();
        NascLabel = new javax.swing.JLabel();
        FidelidadeLabel = new javax.swing.JLabel();
        NomeTextField = new javax.swing.JTextField();
        CodTextField = new javax.swing.JTextField();
        GorjetaTextField = new javax.swing.JTextField();
        CouvertTextField = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        CPFLabel1 = new javax.swing.JLabel();
        CpfTextField = new javax.swing.JTextField();
        jButtonFechaConta = new javax.swing.JButton();
        jCheckBoxEstaciona = new javax.swing.JCheckBox();
        jCheckBoxReserva = new javax.swing.JCheckBox();
        jCheckBoxStatus = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPedido = new javax.swing.JTextField();

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CPF", "Nome", "Telefone", "Aniversário", "Endereço", "Fidelidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableClientes);

        setBorder(javax.swing.BorderFactory.createTitledBorder("Vendas"));

        NomeLabel.setText("Codigo do Pedido");

        CPFLabel.setText("Cliente");

        NascLabel.setText("Gorjeta");

        FidelidadeLabel.setText("Couvert");

        NomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeTextFieldActionPerformed(evt);
            }
        });

        CodTextField.setEditable(false);

        GorjetaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GorjetaTextFieldActionPerformed(evt);
            }
        });

        CouvertTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CouvertTextFieldActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CPF", "Nome", "Código", "Estacionamento", "Reserva", "Gorjeta", "Couvert", "Status", "Pedido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableVendas);

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        CPFLabel1.setText("CPF");

        CpfTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CpfTextFieldActionPerformed(evt);
            }
        });

        jButtonFechaConta.setText("Fechar Conta");
        jButtonFechaConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFechaContaActionPerformed(evt);
            }
        });

        jCheckBoxEstaciona.setText("Estacionamento");
        jCheckBoxEstaciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEstacionaActionPerformed(evt);
            }
        });

        jCheckBoxReserva.setText("Reserva");

        jCheckBoxStatus.setText("Status");
        jCheckBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxStatusActionPerformed(evt);
            }
        });

        jLabel1.setText("Pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NascLabel)
                            .addComponent(FidelidadeLabel)
                            .addComponent(CPFLabel)
                            .addComponent(NomeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(NomeTextField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jCheckBoxReserva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(49, 49, 49)
                                        .addComponent(jCheckBoxStatus)))
                                .addGap(38, 38, 38)
                                .addComponent(CPFLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(CpfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(CouvertTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                            .addComponent(GorjetaTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(jButtonCancelar))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jButtonFechaConta)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonExcluir)
                                    .addComponent(jButtonEditar))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSalvar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxEstaciona)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CPFLabel1)
                        .addComponent(CpfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CPFLabel)
                        .addComponent(NomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeLabel)
                    .addComponent(CodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxEstaciona)
                    .addComponent(jCheckBoxReserva)
                    .addComponent(jCheckBoxStatus))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GorjetaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NascLabel)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CouvertTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FidelidadeLabel))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonSalvar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButtonFechaConta)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonEditar)
                        .addGap(28, 28, 28)
                        .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void NomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeTextFieldActionPerformed

    private void GorjetaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GorjetaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GorjetaTextFieldActionPerformed

    private void CouvertTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CouvertTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CouvertTextFieldActionPerformed

    private void CpfTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CpfTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CpfTextFieldActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        CpfTextField.setText("");
        NomeTextField.setText("");
        CodTextField.setText("");
        jCheckBoxEstaciona.setSelected(false);
        jCheckBoxReserva.setSelected(false);
        jCheckBoxStatus.setSelected(false);
        GorjetaTextField.setText("");
        CouvertTextField.setText("");
        jTextFieldPedido.setText("");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jCheckBoxEstacionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEstacionaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxEstacionaActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        Venda venda = new Venda();
        try{
            int cod_pedido = Integer.parseInt(CodTextField.getText());
            venda.setCpf(CpfTextField.getText());
            venda.setNome(NomeTextField.getText());
            venda.setCod_pedido(cod_pedido);
            venda.setCouvert(Float.parseFloat(CouvertTextField.getText()));
            venda.setEstacionou(jCheckBoxEstaciona.isSelected());
            venda.setReservou(jCheckBoxReserva.isSelected());
            venda.setStatus(jCheckBoxStatus.isSelected());
            venda.setGorjeta(Float.parseFloat(GorjetaTextField.getText()));
            venda.setPedido(Float.parseFloat(jTextFieldPedido.getText()));
            daoV.editar(venda);
        }catch(NumberFormatException e){
            venda.setCpf(CpfTextField.getText());
            venda.setNome(NomeTextField.getText());
            venda.setCod_pedido(0);
            venda.setCouvert(Float.parseFloat(CouvertTextField.getText()));
            venda.setEstacionou(jCheckBoxEstaciona.isSelected());
            venda.setReservou(jCheckBoxEstaciona.isSelected());
            venda.setStatus(jCheckBoxStatus.isSelected());
            venda.setGorjeta(Float.parseFloat(GorjetaTextField.getText()));
            venda.setPedido(Float.parseFloat(jTextFieldPedido.getText()));
            daoV.adicionar(venda);
        }
        JOptionPane.showMessageDialog(jButtonSalvar, "Salvo com sucesso!");
        atualizaTabela();
        CpfTextField.setEnabled(true);
        NomeTextField.setEnabled(true);
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        if (jTableVendas.getSelectedRowCount() == 1){
            int linha = jTableVendas.getSelectedRow();
            CpfTextField.setEnabled(false);
            NomeTextField.setEnabled(false);
            
            CpfTextField.setText(jTableVendas.getValueAt(linha, 0)+"");
            NomeTextField.setText(jTableVendas.getValueAt(linha, 1)+"");
            CodTextField.setText(jTableVendas.getValueAt(linha, 2)+"");
            jCheckBoxEstaciona.setSelected(Boolean.valueOf(jTableVendas.getValueAt(linha, 3)+""));
            jCheckBoxReserva.setSelected(Boolean.valueOf(jTableVendas.getValueAt(linha, 4)+""));
            jCheckBoxStatus.setSelected(Boolean.valueOf(jTableVendas.getValueAt(linha, 7)+""));
            GorjetaTextField.setText(jTableVendas.getValueAt(linha, 5)+"");
            CouvertTextField.setText(jTableVendas.getValueAt(linha, 6)+"");
            jTextFieldPedido.setText(jTableVendas.getValueAt(linha, 8)+"");
        }else{
            JOptionPane.showMessageDialog(jButtonSalvar, "Selecione apenas uma linha!");
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        if (jTableVendas.getSelectedRowCount() >= 1){
            int[] linhas = jTableVendas.getSelectedRows();
            for (int i = linhas.length - 1; i >= 0; i--){
                int codigoPedido = Integer.parseInt(jTableVendas.getValueAt(linhas[i], 2)+"");
                daoV.remover(codigoPedido);
            }
            JOptionPane.showMessageDialog(jButtonSalvar, "Removido com sucesso!");
            atualizaTabela();
        }else{
            JOptionPane.showMessageDialog(jButtonSalvar, "Selecione ao menos uma linha!");
        }      
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonFechaContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFechaContaActionPerformed
        // TODO add your handling code here:
        if (jTableVendas.getSelectedRowCount() == 1){
            Venda venda = new Venda();
            Locale localeBR = new Locale("pt", "BR");
            int linha = jTableVendas.getSelectedRow();
            boolean opcao = false;
            
            venda.setCpf(jTableVendas.getValueAt(linha, 0)+"");
            venda.setNome(jTableVendas.getValueAt(linha, 1)+"");
            venda.setCod_pedido(Integer.parseInt(jTableVendas.getValueAt(linha, 2)+""));
            venda.setEstacionou(Boolean.valueOf(jTableVendas.getValueAt(linha, 3)+""));
            venda.setReservou(Boolean.valueOf(jTableVendas.getValueAt(linha, 4)+""));
            venda.setGorjeta(Float.parseFloat(jTableVendas.getValueAt(linha, 5)+""));
            venda.setCouvert(Float.parseFloat(jTableVendas.getValueAt(linha, 6)+""));
            venda.setStatus(Boolean.valueOf(jTableVendas.getValueAt(linha, 7)+""));
            venda.setPedido(Float.parseFloat(jTableVendas.getValueAt(linha, 8)+""));

            if (!venda.isStatus()){
                double gorjeta = Float.parseFloat(jTableVendas.getValueAt(linha, 5)+"");
                double couvert = Float.parseFloat(jTableVendas.getValueAt(linha, 6)+"");
                double pedido = Float.parseFloat(jTableVendas.getValueAt(linha, 8)+"");
                double estacionamento = 0;
                double reserva = 0;
                if (Boolean.valueOf(jTableVendas.getValueAt(linha, 3)+"")){
                    estacionamento = daoV.preco(venda.getCpf());
                }
                if (Boolean.valueOf(jTableVendas.getValueAt(linha, 4)+"")){
                    reserva = daoV.precoReserva(venda.getCpf());
                }
                double contaFechada = gorjeta + couvert + estacionamento + reserva + pedido; // estacionamento = 5; reserva = 12 (mudar depois)
                NumberFormat dinheiro = NumberFormat.getCurrencyInstance(localeBR);
                JOptionPane.showMessageDialog(jButtonSalvar, "Total à pagar: " + dinheiro.format(contaFechada));

                int pagamento = JOptionPane.showConfirmDialog(null, "pagamento efetuado?");
                if (pagamento == JOptionPane.YES_OPTION){
                    opcao = true;

                }else if(pagamento == JOptionPane.NO_OPTION){
                    opcao = false;
                }
                 boolean resposta = daoV.pagamento(venda, opcao);
                 if (resposta == true){
                    JOptionPane.showMessageDialog(jButtonSalvar, "Pagamento efetuado!");
                 }else{
                     JOptionPane.showMessageDialog(jButtonSalvar, "Pagamento EM ABERTO!");
                 }
            }else{
                JOptionPane.showMessageDialog(jButtonSalvar, "PAGAMENTO JÁ REALIZADO");
            }
            //atualizaTabela();
        }else{
            JOptionPane.showMessageDialog(jButtonSalvar, "Selecione apenas uma linha!");
        }
        atualizaTabela();
    }//GEN-LAST:event_jButtonFechaContaActionPerformed

    private void jCheckBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CPFLabel;
    private javax.swing.JLabel CPFLabel1;
    private javax.swing.JTextField CodTextField;
    private javax.swing.JTextField CouvertTextField;
    private javax.swing.JTextField CpfTextField;
    private javax.swing.JLabel FidelidadeLabel;
    private javax.swing.JTextField GorjetaTextField;
    private javax.swing.JLabel NascLabel;
    private javax.swing.JLabel NomeLabel;
    private javax.swing.JTextField NomeTextField;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonFechaConta;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBoxEstaciona;
    private javax.swing.JCheckBox jCheckBoxReserva;
    private javax.swing.JCheckBox jCheckBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldPedido;
    // End of variables declaration//GEN-END:variables
}
